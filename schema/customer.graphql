#customer
directive @auth on FIELD_DEFINITION

type Customer {
    id: ID!
    name: String!
    address: String!
    license_id: String!
    phone_number: String!
    email: String!
    dob:Time!
    membership_num:Int!
    createdAt: Time!
    updatedAt: Time!
}
input CreateCustomerInput {
    name: String!
    address: String!
    license_id: String!
    phone_number: String!
    email: String!
    dob:Time!
    membership_num:Int
    password: String!
}

input LoginInput{
    email:String!
    password:String!
}

type CustomerConnection {
    edges: [CustomerEdge]
    pageInfo: PageInfo!
    totalCount: Int!
}

type CustomerEdge {
    node: Customer
    cursor: Cursor!
}

#Role
type Role{
    id: ID!
    name: String!
}

input CreateRoleInput{
    name : String!
}

#Token
type JWT{
    token: String!
}
type Query {
    customers(after: Cursor, first: Int, before: Cursor, last: Int): CustomerConnection @goField(forceResolver: true) @auth
    customer(input: ID!): Customer @auth
    role(input : Int) : Role @goField(forceResolver: true) @auth
}

type Mutation {
    register(input: CreateCustomerInput!): JWT
    login(input: LoginInput!) : JWT
    createRole(input: CreateRoleInput!): Role @auth
}


