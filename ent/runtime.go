// Code generated by ent, DO NOT EDIT.

package ent

import (
	"customer/ent/customer"
	"customer/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	customerFields := schema.Customer{}.Fields()
	_ = customerFields
	// customerDescName is the schema descriptor for name field.
	customerDescName := customerFields[1].Descriptor()
	// customer.NameValidator is a validator for the "name" field. It is called by the builders before save.
	customer.NameValidator = customerDescName.Validators[0].(func(string) error)
	// customerDescAddress is the schema descriptor for address field.
	customerDescAddress := customerFields[2].Descriptor()
	// customer.AddressValidator is a validator for the "address" field. It is called by the builders before save.
	customer.AddressValidator = customerDescAddress.Validators[0].(func(string) error)
	// customerDescLicenseID is the schema descriptor for license_id field.
	customerDescLicenseID := customerFields[3].Descriptor()
	// customer.LicenseIDValidator is a validator for the "license_id" field. It is called by the builders before save.
	customer.LicenseIDValidator = customerDescLicenseID.Validators[0].(func(string) error)
	// customerDescPhoneNumber is the schema descriptor for phone_number field.
	customerDescPhoneNumber := customerFields[4].Descriptor()
	// customer.PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	customer.PhoneNumberValidator = customerDescPhoneNumber.Validators[0].(func(string) error)
	// customerDescEmail is the schema descriptor for email field.
	customerDescEmail := customerFields[5].Descriptor()
	// customer.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	customer.EmailValidator = customerDescEmail.Validators[0].(func(string) error)
	// customerDescPassword is the schema descriptor for password field.
	customerDescPassword := customerFields[6].Descriptor()
	// customer.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	customer.PasswordValidator = customerDescPassword.Validators[0].(func(string) error)
	// customerDescActive is the schema descriptor for active field.
	customerDescActive := customerFields[7].Descriptor()
	// customer.DefaultActive holds the default value on creation for the active field.
	customer.DefaultActive = customerDescActive.Default.(bool)
	// customerDescCreatedAt is the schema descriptor for created_at field.
	customerDescCreatedAt := customerFields[10].Descriptor()
	// customer.DefaultCreatedAt holds the default value on creation for the created_at field.
	customer.DefaultCreatedAt = customerDescCreatedAt.Default.(time.Time)
	// customerDescUpdatedAt is the schema descriptor for updated_at field.
	customerDescUpdatedAt := customerFields[11].Descriptor()
	// customer.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	customer.DefaultUpdatedAt = customerDescUpdatedAt.Default.(time.Time)
}
